p=String.prototype;p.r=p.replace;n=0;P=Proxy;h={get:(t,k)=>{if(typeof t[k]!=='object')return t[k];t[k]._p=t;return new P(t[k],h);},set:(t,k,v)=>{t[k]=v;if(k==='_p')return!0;while(t._p){if(t.cbs)t.cbs.forEach(c=>{if(!!c)c(t)});t=t._p}return!0;}}
class T{constructor(c){let f=c.f;f.id=!!f.id?f.id:`tlx_${n++}`;f.cbs=[()=>{T.r(`#${f.id}`,c);}];return new P(c,h)}static r(s,c){document.querySelectorAll(s).forEach((e)=>{e.innerHTML=this.l(c)})}static b(o,a,b){return this.l(o?a:b)}static t(l,a){return a.map((e)=>{return`${!!l[0]?`<${l[0]}>`:``}${!e.map?e:this.t(l.slice(1),e)}${!!l[0]?`</${l[0]}>`:``}`}).join('')}static l(c){return eval('`'+c.w.r(/{@/g,'${c.f.').r(/@/g,'c.f.').r(/{</g,'${Tilux.b').r(/{#/g,'${Tilux.t').r(/{>/g,'${Tilux.l').r(/{$/g,'${')+'`')}}T.render=T.r;var Tilux=T;

console.log("ran tilux.min.js");
